# App Info
spring.application.name=school
server.port=3030

# === JWT Security ===
spring.security.oauth2.resourceserver.jwt.secret-key=MyVeryStrongSecretKey1234567890ABCDEF

# === PostgreSQL Configuration ===
spring.datasource.url=jdbc:postgresql://localhost:5432/school
spring.datasource.username=postgres
spring.datasource.password=9966
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=details

# === Swagger/OpenAPI ===
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui/index.html

# === Resilience4j Circuit Breaker ===
resilience4j.circuitbreaker.instances.myServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.studentService.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.studentService.sliding-window-size=5
resilience4j.circuitbreaker.instances.studentService.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.studentService.wait-duration-in-open-state=5000
resilience4j.circuitbreaker.instances.studentService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.studentService.minimum-number-of-calls=5

# === Kafka Configuration ===

# Broker
spring.kafka.bootstrap-servers=localhost:9092

# Producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer (only needed if your app consumes messages)
spring.kafka.consumer.group-id=default
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Admin (auto topic creation)
spring.kafka.admin.bootstrap-servers=localhost:9092
spring.kafka.admin.auto-create=true
spring.kafka.admin.fail-fast=false

# === Logging ===

# Application logs
logging.level.org.springframework.web=ERROR

# Kafka client logs
logging.level.org.apache.kafka=ERROR
logging.level.org.apache.kafka.clients=ERROR
logging.level.org.apache.kafka.clients.consumer.internals=ERROR
logging.level.org.apache.kafka.clients.producer.internals=ERROR
logging.level.org.apache.kafka.common=ERROR
logging.level.org.apache.kafka.common.utils.AppInfoParser=ERROR
logging.level.org.apache.kafka.common.network.Selector=ERROR
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.org.apache.kafka.clients.FetchSessionHandler=ERROR

# Kafka broker logs (if embedded or local testing)
logging.level.kafka=ERROR
logging.level.kafka.controller=ERROR
logging.level.kafka.server=ERROR
logging.level.kafka.log=ERROR

# Spring Kafka
logging.level.org.springframework.kafka=ERROR

# === Actuator ===
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
